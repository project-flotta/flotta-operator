// Code generated by mockery v1.0.0. DO NOT EDIT.

package restapi

import context "context"
import middleware "github.com/go-openapi/runtime/middleware"
import mock "github.com/stretchr/testify/mock"
import yggdrasil "github.com/project-flotta/flotta-operator/restapi/operations/yggdrasil"

// MockYggdrasilAPI is an autogenerated mock type for the YggdrasilAPI type
type MockYggdrasilAPI struct {
	mock.Mock
}

// GetControlMessageForDevice provides a mock function with given fields: ctx, params
func (_m *MockYggdrasilAPI) GetControlMessageForDevice(ctx context.Context, params yggdrasil.GetControlMessageForDeviceParams) middleware.Responder {
	ret := _m.Called(ctx, params)

	var r0 middleware.Responder
	if rf, ok := ret.Get(0).(func(context.Context, yggdrasil.GetControlMessageForDeviceParams) middleware.Responder); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(middleware.Responder)
		}
	}

	return r0
}

// GetDataMessageForDevice provides a mock function with given fields: ctx, params
func (_m *MockYggdrasilAPI) GetDataMessageForDevice(ctx context.Context, params yggdrasil.GetDataMessageForDeviceParams) middleware.Responder {
	ret := _m.Called(ctx, params)

	var r0 middleware.Responder
	if rf, ok := ret.Get(0).(func(context.Context, yggdrasil.GetDataMessageForDeviceParams) middleware.Responder); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(middleware.Responder)
		}
	}

	return r0
}

// PostControlMessageForDevice provides a mock function with given fields: ctx, params
func (_m *MockYggdrasilAPI) PostControlMessageForDevice(ctx context.Context, params yggdrasil.PostControlMessageForDeviceParams) middleware.Responder {
	ret := _m.Called(ctx, params)

	var r0 middleware.Responder
	if rf, ok := ret.Get(0).(func(context.Context, yggdrasil.PostControlMessageForDeviceParams) middleware.Responder); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(middleware.Responder)
		}
	}

	return r0
}

// PostDataMessageForDevice provides a mock function with given fields: ctx, params
func (_m *MockYggdrasilAPI) PostDataMessageForDevice(ctx context.Context, params yggdrasil.PostDataMessageForDeviceParams) middleware.Responder {
	ret := _m.Called(ctx, params)

	var r0 middleware.Responder
	if rf, ok := ret.Get(0).(func(context.Context, yggdrasil.PostDataMessageForDeviceParams) middleware.Responder); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(middleware.Responder)
		}
	}

	return r0
}
