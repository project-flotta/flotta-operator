// Code generated by go-swagger; DO NOT EDIT.

package yggdrasil

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/project-flotta/flotta-operator/models"
)

// GetDataMessageForDeviceReader is a Reader for the GetDataMessageForDevice structure.
type GetDataMessageForDeviceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDataMessageForDeviceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDataMessageForDeviceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDataMessageForDeviceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDataMessageForDeviceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDataMessageForDeviceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDataMessageForDeviceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDataMessageForDeviceOK creates a GetDataMessageForDeviceOK with default headers values
func NewGetDataMessageForDeviceOK() *GetDataMessageForDeviceOK {
	return &GetDataMessageForDeviceOK{}
}

/* GetDataMessageForDeviceOK describes a response with status code 200, with default header values.

Success
*/
type GetDataMessageForDeviceOK struct {
	Payload *models.Message
}

func (o *GetDataMessageForDeviceOK) Error() string {
	return fmt.Sprintf("[GET /data/{device_id}/in][%d] getDataMessageForDeviceOK  %+v", 200, o.Payload)
}
func (o *GetDataMessageForDeviceOK) GetPayload() *models.Message {
	return o.Payload
}

func (o *GetDataMessageForDeviceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataMessageForDeviceUnauthorized creates a GetDataMessageForDeviceUnauthorized with default headers values
func NewGetDataMessageForDeviceUnauthorized() *GetDataMessageForDeviceUnauthorized {
	return &GetDataMessageForDeviceUnauthorized{}
}

/* GetDataMessageForDeviceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDataMessageForDeviceUnauthorized struct {
}

func (o *GetDataMessageForDeviceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /data/{device_id}/in][%d] getDataMessageForDeviceUnauthorized ", 401)
}

func (o *GetDataMessageForDeviceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDataMessageForDeviceForbidden creates a GetDataMessageForDeviceForbidden with default headers values
func NewGetDataMessageForDeviceForbidden() *GetDataMessageForDeviceForbidden {
	return &GetDataMessageForDeviceForbidden{}
}

/* GetDataMessageForDeviceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDataMessageForDeviceForbidden struct {
}

func (o *GetDataMessageForDeviceForbidden) Error() string {
	return fmt.Sprintf("[GET /data/{device_id}/in][%d] getDataMessageForDeviceForbidden ", 403)
}

func (o *GetDataMessageForDeviceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDataMessageForDeviceNotFound creates a GetDataMessageForDeviceNotFound with default headers values
func NewGetDataMessageForDeviceNotFound() *GetDataMessageForDeviceNotFound {
	return &GetDataMessageForDeviceNotFound{}
}

/* GetDataMessageForDeviceNotFound describes a response with status code 404, with default header values.

Error
*/
type GetDataMessageForDeviceNotFound struct {
}

func (o *GetDataMessageForDeviceNotFound) Error() string {
	return fmt.Sprintf("[GET /data/{device_id}/in][%d] getDataMessageForDeviceNotFound ", 404)
}

func (o *GetDataMessageForDeviceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDataMessageForDeviceInternalServerError creates a GetDataMessageForDeviceInternalServerError with default headers values
func NewGetDataMessageForDeviceInternalServerError() *GetDataMessageForDeviceInternalServerError {
	return &GetDataMessageForDeviceInternalServerError{}
}

/* GetDataMessageForDeviceInternalServerError describes a response with status code 500, with default header values.

Error
*/
type GetDataMessageForDeviceInternalServerError struct {
}

func (o *GetDataMessageForDeviceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /data/{device_id}/in][%d] getDataMessageForDeviceInternalServerError ", 500)
}

func (o *GetDataMessageForDeviceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
